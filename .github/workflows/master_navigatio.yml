# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - Navigatio 

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 20.18.0 for frontend
      uses: actions/setup-node@v3
      with:
        node-version: '20.18.0'
        cache: 'npm'
    
    - name: Cache frontend node modules
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-frontend-node-modules-${{ hashFiles('frontend/package-lock.json') }}
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        elif [ -f yarn.lock ]; then
          yarn install --frozen-lockfile
        else
          npm install
        fi
    
    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test -- --watchAll=false
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

  backend:
    name: Backend
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })' localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 20.18.0 for backend
      uses: actions/setup-node@v3
      with:
        node-version: '20.18.0'
        cache: 'npm'
    
    - name: Cache backend node modules
      uses: actions/cache@v3
      with:
        path: backend/node_modules
        key: ${{ runner.os }}-backend-node-modules-${{ hashFiles('backend/package-lock.json') }}
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        elif [ -f yarn.lock ]; then
          yarn install --frozen-lockfile
        else
          npm install
        fi
    
    - name: Set up environment variables
      working-directory: ./backend
      env:
        PORT: 5000
        MONGODB_URI: ${{ secrets.MONGODB_URI || 'mongodb+srv://ayush199816:jpODnVQiVDGs5Xv4@navigatio.9ure2jk.mongodb.net/' }}
        JWT_SECRET: ${{ secrets.JWT_SECRET || 'your_jwt_secret_key_here' }}
        JWT_EXPIRE: 30d
        NODE_ENV: test
        GOOGLE_AI_API_KEY: ${{ secrets.GOOGLE_AI_API_KEY }}
      run: |
        # Create .env file for local testing
        echo "PORT=$PORT" > .env
        echo "MONGODB_URI=$MONGODB_URI" >> .env
        echo "JWT_SECRET=$JWT_SECRET" >> .env
        echo "JWT_EXPIRE=$JWT_EXPIRE" >> .env
        echo "NODE_ENV=$NODE_ENV" >> .env
        echo "GOOGLE_AI_API_KEY=$GOOGLE_AI_API_KEY" >> .env
    
    # Uncomment when you have backend tests
    # - name: Run backend tests
    #   working-directory: ./backend
    #   run: npm test
