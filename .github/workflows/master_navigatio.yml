on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js for frontend
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - name: Cache frontend node modules
      uses: actions/cache@v4
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-frontend-node-modules-${{ hashFiles('frontend/package-lock.json') }}
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test -- --watchAll=false
      if: success()
    - name: Build frontend
      working-directory: ./frontend
      run: |
        CI=false npm run build
    - name: Create deployment package
      run: |
        mkdir -p frontend-deployment
        cp -r frontend/build/* frontend-deployment/
        echo '<?xml version="1.0"?><configuration><system.webServer><staticContent><mimeMap fileExtension=".json" mimeType="application/json" /><mimeMap fileExtension=".woff" mimeType="application/font-woff" /><mimeMap fileExtension=".woff2" mimeType="application/font-woff" /></staticContent><rewrite><rules><rule name="React Routes" stopProcessing="true"><match url=".*" /><conditions logicalGrouping="MatchAll"><add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" /><add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" /></conditions><action type="Rewrite" url="/index.html" /></rule></rules></rewrite></system.webServer></configuration>' > frontend-deployment/web.config
    - name: Upload frontend build output
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend-deployment/
        retention-days: 1

  backend:
    name: Backend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js for backend
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci
    - name: Run backend tests
      working-directory: ./backend
      run: npm test
      env:
        PORT: 5000
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        NODE_ENV: test
        GOOGLE_AI_API_KEY: ${{ secrets.GOOGLE_AI_API_KEY }}
    - name: Upload backend code as artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: backend/
        retention-days: 1

  deploy:
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    environment: 'production'
    steps:
    - name: Download frontend build output
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: frontend-deployment
    - name: Deploy frontend to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: frontend-deployment/
        target-path: /home/site/wwwroot
        clean: true
    - name: Download backend build output
      uses: actions/download-artifact@v4
      with:
        name: backend-build
        path: backend-deployment
    - name: Deploy backend to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: backend-deployment/
        target-path: /home/site/wwwroot/api
        clean: true