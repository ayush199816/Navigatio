name: Deploy Frontend to Azure Web App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: 'production'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('frontend/package-lock.json') }}
    
    - name: Install dependencies
      working-directory: ./frontend
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        elif [ -f yarn.lock ]; then
          yarn install --frozen-lockfile
        else
          npm install
        fi
    
    - name: Build frontend and prepare deployment
      working-directory: ./
      run: |
        # Build the frontend
        echo "Building frontend..."
        cd frontend
        CI=false npm run build
        cd ..
        
        # Create a test file to verify deployment
        echo "<!DOCTYPE html><html><body><h1>Test Deployment</h1><p>If you see this, the deployment worked but the React app might have issues.</p></body></html>" > frontend/build/test.html
        
        # Create a proper web.config for Azure Web Apps
        echo '<?xml version="1.0"?>
        <configuration>
          <system.webServer>
            <staticContent>
              <mimeMap fileExtension=".json" mimeType="application/json" />
              <mimeMap fileExtension=".woff" mimeType="application/font-woff" />
              <mimeMap fileExtension=".woff2" mimeType="application/font-woff" />
            </staticContent>
            <rewrite>
              <rules>
                <rule name="React Routes" stopProcessing="true">
                  <match url=".*" />
                  <conditions logicalGrouping="MatchAll">
                    <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                    <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                  </conditions>
                  <action type="Rewrite" url="/index.html" />
                </rule>
              </rules>
            </rewrite>
          </system.webServer>
        </configuration>' > frontend/build/web.config
        
        # Create deployment directory
        echo "Creating deployment package..."
        mkdir -p deploy-package
        
        # Copy frontend build to deployment package
        cp -r frontend/build/* deploy-package/
        
        # Debug: Show deployment package structure
        echo "Deployment package contents:"
        ls -la deploy-package/
    
    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./deploy-package
