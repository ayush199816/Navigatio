name: Build and Deploy to Azure Web App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  AZURE_WEBAPP_NAME: Navigatio
  AZURE_WEBAPP_PACKAGE_PATH: './deploy'
  NODE_VERSION: '22.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Setup Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    # Install jq for JSON processing
    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    # Install frontend dependencies
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    # Build frontend
    - name: Build frontend
      working-directory: ./frontend
      run: |
        npm run build
        mkdir -p ../deploy
        mv build ../deploy/wwwroot

    # Install backend dependencies
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci --production

    # Prepare backend files
    - name: Prepare backend files
      run: |
        echo "Preparing backend files..."
        # Create necessary directories
        mkdir -p deploy/api
        
        # Copy backend files
        echo "Copying backend files..."
        cp -r backend/* deploy/api/
        
        # Ensure web.config exists in the api directory
        if [ ! -f "deploy/api/web.config" ]; then
          echo "Creating web.config for backend..."
          cat > deploy/api/web.config << 'EOL'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
              </handlers>
              <rewrite>
                <rules>
                  <rule name="DynamicContent">
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
                    </conditions>
                    <action type="Rewrite" url="server.js" />
                  </rule>
                </rules>
              </rewrite>
              <iisnode watchedFiles="*.js;*.json" nodeProcessCommandLine="%HOME%\nvm\current\node.exe" />
            </system.webServer>
          </configuration>
          EOL
        fi
        
        # Update package.json if needed
        echo "Updating package.json..."
        if [ -f "deploy/api/package.json" ]; then
          # Remove devDependencies and add start script
          jq 'del(.devDependencies) | .scripts.start = "node server.js"' deploy/api/package.json > deploy/api/package.tmp.json && \
          mv deploy/api/package.tmp.json deploy/api/package.json
        fi
        
        # List files for debugging
        echo "Backend files in deploy/api/:"
        ls -la deploy/api/

    # Create web.config for Azure
    - name: Create web.config
      run: |
        cat > deploy/wwwroot/web.config << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <configuration>
          <system.webServer>
            <rewrite>
              <rules>
                <rule name="StaticContent" stopProcessing="true">
                  <action type="Rewrite" url="public{REQUEST_URI}" />
                </rule>
                <rule name="DynamicContent">
                  <conditions>
                    <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
                  </conditions>
                  <action type="Rewrite" url="/index.html" />
                </rule>
              </rules>
            </rewrite>
            <handlers>
              <add name="httpPlatformHandler" path="*" verb="*" modules="httpPlatformHandler" scriptProcessor="%DEFAULTBITS%\node.exe|%HOME%\site\wwwroot\api\server.js" resourceType="Unspecified" requireAccess="Script" />
            </handlers>
            <httpPlatform processPath="%HOME%\site\wwwroot\api\server.js" stdoutLogEnabled="true" stdoutLogFile="\\?\%HOME%\LogFiles\stdout.log" startupTimeLimit="60" />
          </system.webServer>
        </configuration>
        EOF

    # Deploy to Azure
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        enable-oryx-build: false
        
    # Verify deployment structure
    - name: Verify deployment structure
      run: |
        echo "Contents of deploy directory:"
        ls -la deploy/
        echo "\nContents of deploy/api:"
        ls -la deploy/api/ || echo "No api directory found"
        echo "\nContents of deploy/wwwroot:"
        ls -la deploy/wwwroot/
